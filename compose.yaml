services:

  # alpine:
  #   container_name: alpine
  #   build:
  #     context: ./alpine
  #     dockerfile: ./Dockerfile
  #   networks:
  #     - dev_net
  #   volumes:
  #    - .\alpine\src:/home/devel

  valkey:
    container_name: valkey
    build:
      context: ./valkey
      dockerfile: ./Dockerfile
    networks:
      - dev_net
    ports:
      - "6379:6379"
    volumes:
      - .\valkey\data:/data

#  valkey-vanilla:
#     image: valkey/valkey:8.0.1-alpine
#     restart: unless-stopped
#     networks:
#       - dev_net
#     volumes:
#       - .\valkey\data:/data

  mariadb:
    container_name: mariadb
    image: mariadb:latest
    restart: unless-stopped
    networks:
      - dev_net
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: admin
    volumes:
      - .\mariadb\data:/var/lib/mysql

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: unless-stopped
    shm_size: 128mb
    networks:
      - dev_net
    ports:
      - "5432:5432"
    volumes:
      - .\postgres\data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: test

  mongo:
    container_name: mongodb
    image: mongo
    restart: unless-stopped
    networks:
      - dev_net
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - .\mongodb\data:/data/db

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: unless-stopped
    networks:
      - dev_net
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  adminer:
    container_name: adminer
    image: ghcr.io/shyim/adminerevo:latest
    restart: unless-stopped
    networks:
      - dev_net
    ports:
      - "8080:8080"
    environment:
      ADMINER_DESIGN: "nette"

  dbgate:
    container_name: dbgate
    image: dbgate/dbgate:alpine
    restart: unless-stopped
    networks:
      - dev_net
    ports:
      - "3000:3000"
    volumes:
      - dbgate-data:/root/.dbgate
    environment:
      BASIC_AUTH: true
      LOGINS: admin
      LOGIN_PASSWORD_admin: admin
      CONNECTIONS: con1,con2,con3  # NB no spaces between ','

      LABEL_con1: MariaDB
      SERVER_con1: mariadb
      PORT_con1: 3306
      USER_con1: root
      PASSWORD_con1: admin
      ENGINE_con1: mysql@dbgate-plugin-mysql

      LABEL_con2: MongoDB
      URL_con2: mongodb://admin:admin@mongo:27017
      ENGINE_con2: mongo@dbgate-plugin-mongo

      LABEL_con3: Postgres
      SERVER_con3: postgres
      PORT_con3: 5432
      USER_con3: admin
      PASSWORD_con3: admin
      ENGINE_con3: postgres@dbgate-plugin-postgres

networks:
  dev_net:
    driver: bridge

volumes:
  dbgate-data:
    external: true